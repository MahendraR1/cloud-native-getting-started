apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
data:
  prometheus.cfg: |-
    global:
      scrape_interval: 30s
      scrape_timeout:  29s

      external_labels:
        monitor: 'prometheus-monitor'

    scrape_configs:
      - job_name: 'coe-vpx'
        static_configs:
         - targets: ['coe-prometheus:5563']
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
spec:
  selector:
    matchLabels:
      app: prometheus-server
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          imagePullPolicy: IfNotPresent
          args:
            - "--config.file=/etc/prometheus/prometheus.cfg"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
          imagePullPolicy: Always
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
        - name: prometheus-storage-volume
          emptyDir: {}
---

kind: Service
apiVersion: v1
metadata:
  name: prometheus-server
  labels:
    name: prometheus-server
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'
spec:
  type: ClusterIP
  selector:
    app: prometheus-server
  ports:
    - name: http
      port: 9090
---

kind: Service
apiVersion: v1
metadata:
  name: prometheus-server-nodeport
  labels:
    name: prometheus-server
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
spec:
  type: NodePort
  selector:
    app: prometheus-server
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      nodePort: 30000